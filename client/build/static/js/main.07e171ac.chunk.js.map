{"version":3,"sources":["components/Message.js","components/Progress.js","components/FileUpload.js","App.js","index.js"],"names":["Message","_ref","msg","react_default","a","createElement","className","role","type","data-dismiss","aria-label","aria-hidden","Progress","percentage","style","width","concat","FileUpload","_useState","useState","_useState2","Object","slicedToArray","file","setFile","_useState3","_useState4","filename","setFilename","_useState5","_useState6","uploadedFile","setUploadedFile","_useState7","_useState8","message","setMessage","_useState9","_useState10","uploadPercentage","setUploadPercentage","onSubmit","asyncToGenerator","regenerator_default","mark","_callee","e","formData","res","_res$data","fileName","filePath","wrap","_context","prev","next","preventDefault","console","log","split","FormData","append","axios","post","headers","Content-Type","onUploadProgress","progressEvent","parseInt","Math","round","loaded","total","sent","setTimeout","data","t0","response","status","undefined","stop","_x","apply","this","arguments","components_Message","htmlFor","id","onChange","target","files","name","value","components_Progress","href","download","App","index_esm","height","components_FileUpload","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.07e171ac.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Message = ({ msg }) => {\r\n  return (\r\n    <div className='alert alert-info alert-dismissible fade show' role='alert'>\r\n      {msg}\r\n      <button\r\n        type='button'\r\n        className='close'\r\n        data-dismiss='alert'\r\n        aria-label='Close'\r\n      >\r\n        <span aria-hidden='true'>&times;</span>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nMessage.propTypes = {\r\n  msg: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Progress = ({ percentage }) => {\r\n  return (\r\n    <div className='progress'>\r\n      <div\r\n        className='progress-bar progress-bar-striped bg-success'\r\n        role='progressbar'\r\n        style={{ width: `${percentage}%` }}\r\n      >\r\n        {percentage}%\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nProgress.propTypes = {\r\n  percentage: PropTypes.number.isRequired\r\n};\r\n\r\nexport default Progress;\r\n","import React, { Fragment, useState } from 'react';\r\nimport Message from './Message';\r\nimport Progress from './Progress';\r\nimport axios from 'axios';\r\nconst FileUpload = () => {\r\n  const [file, setFile] = useState('');\r\n  const [filename, setFilename] = useState('Choose docx File');\r\n  const [uploadedFile, setUploadedFile] = useState({});\r\n  const [message, setMessage] = useState('');\r\n  const [uploadPercentage, setUploadPercentage] = useState(0);\r\n  const onChange = e => {\r\n    setFile(e.target.files[0]);\r\n    setFilename(e.target.files[0].name);\r\n  };\r\n\r\n  const onSubmit = async e => {\r\n    e.preventDefault();\r\n    console.log(filename.split('.')[1])\r\n    if(filename.split('.')[1]==='docx'){\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    try {\r\n      const res = await axios.post('/api/upload', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        },\r\n        onUploadProgress: progressEvent => {\r\n          setUploadPercentage(\r\n            parseInt(\r\n              Math.round((progressEvent.loaded * 100) / progressEvent.total)\r\n            )\r\n          );\r\n        }\r\n      });\r\n      \r\n      // Clear percentage\r\n      setTimeout(() => setUploadPercentage(0), 10000);\r\n\r\n      const { fileName, filePath } = res.data;\r\n\r\n      setUploadedFile({ fileName, filePath });\r\n      setMessage('File Uploaded');\r\n    } catch (err) {\r\n      if (err.response.status === 500) {\r\n        setMessage('There was a problem with the server');\r\n      } else {\r\n        setMessage(err.response.data.msg);\r\n      }\r\n      setUploadPercentage(0)\r\n    }\r\n  }\r\n  else if(filename.split('.')[1]===undefined){\r\n    setMessage('Please choose file..')\r\n  }\r\n  else{\r\n    setMessage('only upload docx files !!!')\r\n  }\r\n  };\r\n\r\n  return (\r\n    <section>\r\n      {message ? <Message msg={message} /> : null}\r\n      <form onSubmit={onSubmit}>\r\n        <div className='col-md-6 input-control'>\r\n          <label className='mb-4 h2' htmlFor='customFile'>\r\n            {filename}\r\n          </label>\r\n          <input\r\n            type='file'\r\n            className='form-control form-control-lg'\r\n            id='customFile'\r\n            onChange={onChange}\r\n          />\r\n          <input\r\n          type='submit'\r\n          value='Upload'\r\n          className='btn'\r\n        />\r\n        </div>\r\n      </form>\r\n      <Progress percentage={uploadPercentage} />\r\n          {uploadedFile.fileName ? <div className='row mt-5'>\r\n            <div className=\"col-md-6 m-auto uploaded\">\r\n                <h3 className='text-center'>\r\n                    {uploadedFile.fileName.split('.')[0]+'.pdf'}\r\n                </h3>\r\n                <button className='btn'><a href={uploadedFile.filePath} download>Download</a></button>\r\n            </div>\r\n        </div>\r\n        :\r\n        null}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default FileUpload;\r\n","import React from 'react';\r\nimport FileUpload from './components/FileUpload';\r\nimport { AiFillFileWord} from \"react-icons/ai\";\r\nimport './App.css';\r\nconst App = () => (\r\n  <main className='container-fluid'>\r\n    <header>\r\n        <AiFillFileWord style={{width: \"50px\",height: \"50px\"}}/> <h1>Word to Pdf Converter</h1>\r\n    </header>\r\n    <FileUpload />\r\n    <footer></footer>\r\n  </main>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}